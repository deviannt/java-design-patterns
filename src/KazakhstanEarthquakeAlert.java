import java.util.*;

interface Observer {
    void update(String location, double magnitude);
}

//–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–π
class SeismicMonitor {
    private final List<City> cities = new ArrayList<>();

    public void addCity(City city) {
        cities.add(city);
    }

//—Ä–∞–Ω–¥–æ–º–Ω—ã–π –≥–æ—Ä–æ–¥, —Å –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–µ–º
    public void detectEarthquake(double magnitude) {
        Random random = new Random();
        City affectedCity = cities.get(random.nextInt(cities.size()));

        System.out.println("üåç‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –ó–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–µ –≤ " + affectedCity.getName() + ", –º–∞–≥–Ω–∏—Ç—É–¥–∞: " + magnitude);
        affectedCity.notifyObservers(magnitude);
    }
}

//–∫–ª–∞—Å—Å –≥–æ—Ä–æ–¥ —Å –∂–∏—Ç–µ–ª—è–º–∏
class City {
    private final String name;
    private final List<Observer> observers = new ArrayList<>();

    public City(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    public void addObserver(Observer observer) {
        observers.add(observer);
    }

    public void notifyObservers(double magnitude) {
        for (Observer observer : observers) {
            observer.update(name, magnitude);
        }
    }
}

//SMS –æ–ø–æ–≤–µ—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –ª—é–¥–∏
class Citizen implements Observer {
    private final String name;

    public Citizen(String name) {
        this.name = name;
    }

    @Override
    public void update(String location, double magnitude) {
        System.out.println("üì© " + name + " –∏–∑ " + location + ": \uD83D\uDD34 –í–ê–ñ–ù–û–ï –û–ü–û–í–ï–©–ï–ù–ò–ï: –ó–ï–ú–õ–ï–¢–†–Ø–°–ï–ù–ò–ï! \uD83D\uDD34" +
                "‚ö† –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏–∏:\n" +
                "‚û° –ï—Å–ª–∏ –≤—ã –≤–Ω—É—Ç—Ä–∏ –∑–¥–∞–Ω–∏—è ‚Äì —É–∫—Ä–æ–π—Ç–µ—Å—å –ø–æ–¥ –ø—Ä–æ—á–Ω–æ–π –º–µ–±–µ–ª—å—é, –¥–µ—Ä–∂–∏—Ç–µ—Å—å –ø–æ–¥–∞–ª—å—à–µ –æ—Ç –æ–∫–æ–Ω –∏ —Ç—è–∂–µ–ª—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.\n" +
                "‚û° –ï—Å–ª–∏ –≤—ã –Ω–∞ —É–ª–∏—Ü–µ ‚Äì –æ—Ç–æ–π–¥–∏—Ç–µ –æ—Ç –∑–¥–∞–Ω–∏–π, –¥–µ—Ä–µ–≤—å–µ–≤ –∏ –ª–∏–Ω–∏–π —ç–ª–µ–∫—Ç—Ä–æ–ø–µ—Ä–µ–¥–∞—á.\n" +
                "‚û° –ï—Å–ª–∏ –≤—ã –≤ –º–∞—à–∏–Ω–µ ‚Äì –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ, –∏–∑–±–µ–≥–∞—è –º–æ—Å—Ç–æ–≤ –∏ —Ç—É–Ω–Ω–µ–ª–µ–π.\n"
                + "\uD83D\uDCE2 –û–∂–∏–¥–∞—é—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω—ã–µ –∞—Ñ—Ç–µ—Ä—à–æ–∫–∏. –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã! –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n"
                + "\uD83D\uDEA8 –ë–µ—Ä–µ–≥–∏—Ç–µ —Å–µ–±—è –∏ —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö! \uD83D\uDEA8" +
                " –ú–∞–≥–Ω–∏—Ç—É–¥–∞: " + magnitude + "\n");
    }
}

//–º—Å—á–Ω–∏–∫–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
class KazakhstanEmergencyService implements Observer {
    

    @Override
    public void update(String location, double magnitude) {
        System.out.println("üöë –ú–ß–° –†–ö: –°—Ä–æ—á–Ω–∞—è —ç–≤–∞–∫—É–∞—Ü–∏—è –∏ –ø–æ–º–æ—â—å –Ω–∞—Å–µ–ª–µ–Ω–∏—é –≤ " + location + "!");
    }
}

//–∞–∫–∏–º–∞—Ç –¥–µ–ª–∞—é—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É
// –ê–∫–∏–º–∞—Ç —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∑–µ–º–ª–µ—Ç—Ä—è—Å–µ–Ω–∏—è
class CityAkimat implements Observer {
    private final String city;
    private String status;

    public CityAkimat(String city) {
        this.city = city;
        this.status = "–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ";
    }

    @Override
    public void update(String location, double magnitude) {
        if (location.equals(city)) {
            if (magnitude > 5.0) {
                status = "–ß–°! –°—Ä–æ—á–Ω–∞—è —ç–≤–∞–∫—É–∞—Ü–∏—è!";
            } else if (magnitude < 3.0) {
                status = "–í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ, —É–≥—Ä–æ–∑—ã –Ω–µ—Ç.";
            } else {
                status = "–û–∂–∏–¥–∞–µ–º –∞—Ñ—Ç–µ—Ä—à–æ–∫–∏.";
            }

            System.out.println("üèõÔ∏è –ê–∫–∏–º–∞—Ç " + city + ": –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É, –º–æ—Å—Ç—ã –∏ –∑–¥–∞–Ω–∏—è.");
            System.out.println("üì¢ –°—Ç–∞—Ç—É—Å –≥–æ—Ä–æ–¥–∞: " + status);
        }
    }

    public String getStatus() {
        return status;
    }
}



public class KazakhstanEarthquakeAlert {
    public static void main(String[] args) {
        SeismicMonitor monitor = new SeismicMonitor();

        City almaty = new City("–ê–ª–º–∞—Ç—ã");
        City shymkent = new City("–®—ã–º–∫–µ–Ω—Ç");
        City taraz = new City("–¢–∞—Ä–∞–∑");

        //–≥–æ—Ä–æ–¥–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ
        monitor.addCity(almaty);
        monitor.addCity(shymkent);
        monitor.addCity(taraz);

        //–∂–∏—Ç–µ–ª–∏
        almaty.addObserver(new Citizen("–¢–µ–º–∏—Ä–ª–∞–Ω"));
        almaty.addObserver(new Citizen("–ï–ª–∂–∞–Ω"));
        almaty.addObserver(new Citizen("–ê—Ä—Å–µ–Ω"));

        shymkent.addObserver(new Citizen("–ù—É—Ä–∞–π"));
        shymkent.addObserver(new Citizen("–ñ–∞–Ω–∞—Ç"));

        taraz.addObserver(new Citizen("–°–∞–Ω–∏—è"));
        taraz.addObserver(new Citizen("–ï—Ä–±–æ–ª"));

        //—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã
        almaty.addObserver(new KazakhstanEmergencyService());
        shymkent.addObserver(new KazakhstanEmergencyService());
        taraz.addObserver(new KazakhstanEmergencyService());

        //–∞–∫–∏–º–∞—Ç—ã
        almaty.addObserver(new CityAkimat("–ê–ª–º–∞—Ç—ã"));
        shymkent.addObserver(new CityAkimat("–®—ã–º–∫–µ–Ω—Ç"));
        taraz.addObserver(new CityAkimat("–¢–∞—Ä–∞–∑"));

        monitor.detectEarthquake(6);
    }
}
